# 17 nodes(includes depots)
# Weights (i.e costs, such as time) between nodes
# For example, cost 6 at index (0, 1) represents a cost between node 0 and 1 is 6

# dist_mat is also time_mat 
dist_mat: [
  [0,  6,  9,  8,  6,  3,  6,  2,  3,  2,  6,  6,  4,  4,  5,  9,  7],
  [6,  0,  8,  3,  2,  6,  8,  4,  8,  8, 13,  7,  5,  8, 12, 10, 14],
  [9,  8,  0, 11, 10,  6,  3,  9,  5,  8,  4, 15, 13, 13,  9, 18,  9],
  [8,  3, 11,  0,  1,  7, 10,  6, 10, 10, 14,  6,  7,  9, 13,  6, 16],
  [6,  2, 10,  1,  0,  6,  9,  4,  8,  9, 13,  4,  6,  8, 12,  8, 14],
  [3,  6,  6,  7,  6,  0,  2,  3,  2,  2,  6,  9,  7,  7,  6, 12,  8],
  [6,  8,  3, 10,  9,  2,  0,  6,  2,  5,  4, 12, 10, 10,  6, 15,  5],
  [2,  4,  9,  6,  4,  3,  6,  0,  4,  4,  8,  5,  4,  3,  7,  8, 10],
  [3,  8,  5, 10,  8,  2,  2,  4,  0,  3,  4,  9,  8,  7,  3, 13,  6],
  [2,  8,  8, 10,  9,  2,  5,  4,  3,  0,  4,  6,  5,  4,  3,  9,  5],
  [6, 13,  4, 14, 13,  6,  4,  8,  4,  4,  0, 10,  9,  8,  4, 13,  4],
  [6,  7, 15,  6,  4,  9, 12,  5,  9,  6, 10,  0,  1,  3,  7,  3, 10],
  [4,  5, 13,  7,  6,  7, 10,  4,  8,  5,  9,  1,  0,  2,  6,  4,  8],
  [4,  8, 13,  9,  8,  7, 10,  3,  7,  4,  8,  3,  2,  0,  4,  5,  6],
  [5, 12,  9, 13, 12,  6,  6,  7,  3,  3,  4,  7,  6,  4,  0,  9,  2],
  [9, 10, 18,  6,  8, 12, 15,  8, 13,  9, 13,  3,  4,  5,  9,  0,  9],
  [7, 14,  9, 16, 14,  8,  5, 10,  6,  5,  4, 10,  8,  6,  2,  9,  0]
]

# location: [(456, 320), # location 0 - the depot
# (228, 0),    # location 1
# (912, 0),    # location 2
# (0, 80),     # location 3
# (114, 80),   # location 4
# (570, 160),  # location 5
# (798, 160),  # location 6
# (342, 240),  # location 7
# (684, 240),  # location 8
# (570, 400),  # location 9
# (912, 400),  # location 10
# (114, 480),  # location 11
# (228, 480),  # location 12
# (342, 560),  # location 13
# (684, 560),  # location 14
# (0, 640),    # location 15
# (798, 640)]  # location 16

# Times it takes for a vehicle to leave from the time it stops at each node
service_times: [0, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]

# Demands corresponding to the quantity (such as volume) of items to be picked up
demands: [0, 1, 1, 0, 3, 2, 3, 3, 1, 1, 2, 1, 2, 3, 3, 1, 1]

# Time windows for nodes which are considered as requested times for a visit
# Vehicles must visit a node within its time window
time_windows: [
 [ 0,   0],
 [55,  75],
 [75,  95],
 [ 0,   0], # [60,  80],
 [35,  55],
 [ 0,  20],
 [55,  75],
 [ 0,  20],
 [10,  30],
 [ 0,  20],
 [75,  95],
 [85, 105],
 [ 5,  25],
 [15,  35],
 [10,  30],
 [45,  65],
 [30,  50],
 ]


vehicle_capacities: [15, 10, 10, 10, 20]


# Index of the start node
# depot: 0

# about starts and ends
# https://developers.google.com/optimization/routing/routing_tasks
# len(vehicle_capacities) should be same as len(starts)
starts: [0, 3, 0, 3, 0]
ends: [0, 3, 0, 3, 0]